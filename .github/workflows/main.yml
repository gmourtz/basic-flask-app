name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
          
      - name: Upgrade pip
        run: pip install --upgrade pip
        
      - name: Clear pip cache
        run: pip cache purge
        
      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build Docker image
        run: docker build -t flask_app .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: AKIASMHHED4M6YLZWH5C
          aws-secret-access-key: 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
          aws-region: eu-north-1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push Docker image to ECR
        run: |
          docker tag flask_app:latest 163693469465.dkr.ecr.eu-north-1.amazonaws.com/flask-app:latest
          aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 163693469465.dkr.ecr.eu-north-1.amazonaws.com
          docker push 163693469465.dkr.ecr.eu-north-1.amazonaws.com/flask-app:latest


      - name: Deploy to AWS Fargate
        run: |
          # Use AWS CLI or SDK to update your ECS task definition and service with the new image
          # E.g., aws ecs register-task-definition, aws ecs update-service
           timestamp=$(date +%Y%m%d%H%M%S)
           basic-flask-app-task="basic-flask-app-task-${timestamp}"
           aws ecs register-task-definition --family "${basic-flask-app-task}" --container-definitions '[{"name": "flask_app_container", "image": "${{ steps.login-ecr.outputs.registry }}/${{ github.repository }}:latest"}]'

           
           
           
           
